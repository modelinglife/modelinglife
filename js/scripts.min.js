// MINE
document.body.classList.add("jsy"); const platformExpression = /Mac|iPhone|iPod|iPad/i, rejectedExpression = /Chrome|Android|CriOS|FxiOS|EdgiOS/i, expectedExpression = /Safari/i, isAppleSafari = () => { var t = navigator.userAgent; return !rejectedExpression.test(t) && (platformExpression.test(t) && expectedExpression.test(t)) }; var _img, newImg; isAppleSafari() && (_img = document.getElementById("vid"), (newImg = new Image).onload = function () { var t = this.src; _img.setAttribute("poster", t), setInterval(function () { document.getElementById("vid").setAttribute("poster", t) }, 9e3) }, newImg.src = "./assets/poster.apng"); let hf = document.querySelector(".h .hfull >figure").cloneNode(!0), hn = document.querySelector(".h .hfull >nav").cloneNode(!0); document.querySelector(".h .hsmall").appendChild(hf), document.querySelector(".h .hsmall").appendChild(hn); var fix = document.querySelectorAll(".m >section >div"); fix.forEach(t => { var e = t.clientHeight / 2; t.style.top = "calc( 50% - " + e + "px )" }); var paths = document.querySelectorAll("#elements .arrow-path path:nth-child(2)"); const arr_ani = []; paths.forEach(function (t, e) { var a = t.previousElementSibling, t = anime.path(t), t = anime({ autoplay: !1, targets: a, translateX: t("x"), translateY: t("y"), rotate: t("angle"), easing: "linear", loop: !0, duration: anime.random(1e4, 6e3) }); arr_ani.push(t) }), arr_ani.forEach(t => { t.seek(.2 * t.duration) }); paths = document.querySelectorAll("#menhome .men >path"); const arr_ani_men = []; paths.forEach(function (t, e) { var a = t.parentElement, t = anime.path(t), t = anime({ autoplay: !1, targets: a, translateX: t("x"), translateY: t("y"), easing: "linear", loop: !0, direction: "alternate", duration: anime.random(15e3, 8e3) }); arr_ani_men.push(t) }), arr_ani_men.forEach(t => { t.seek(.2 * t.duration) }); var tlc = anime.timeline({ autoplay: !1, easing: "linear" }); tlc.add({ targets: ".h .hfull", translateY: "-102%", duration: 4e3 }).add({ targets: "#bg-clr", translateY: "-100%", duration: 4e3 }, "-=4000").add({ targets: ".sct-0 > div", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "-=2000").add({ targets: ".sct-0 > div, #vid", translateY: "-100vh", duration: 4e3 }, "+=4666").add({ targets: "#arrow-ctrl", translateY: ["90%", "120%"], duration: 100 }).add({ targets: ".sct-1-1", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "-=4200").add({ targets: "#tria", translateY: [{ value: ["100vh", "0vh"], duration: 2e3 }], scale: [{ value: [.7, 1], duration: 600, delay: 2e3 }] }, "-=3000").add({ targets: ".sct-1-2", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "+=2000").add({ targets: ".sct-1-1", translateY: [{ value: "-102%", duration: 1800 }], opacity: [{ value: 0, duration: 800, delay: 1400 }] }, "-=2000").add({ targets: "#tria .lines", strokeDashoffset: [anime.setDashoffset, 0], easing: "easeInOutSine" }, "-=666").add({ targets: "#tria text", opacity: [0, 1] }, "-=2000").add({ targets: ".sct-1-3", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "+=4666").add({ targets: ".sct-1-2", translateY: [{ value: "-102%", duration: 1800 }], opacity: [{ value: 0, duration: 800, delay: 1400 }] }, "-=2400").add({ targets: "#tria .uppery path", strokeDashoffset: [anime.setDashoffset, 0], delay: function (t, e) { return 200 * e } }, "-=1000").add({ targets: "#arrow-ctrl", translateY: ["120%", "90%"], duration: 100 }, "+=4666").add({ targets: ".sct-1-3, #tria", translateY: "-100vh", duration: 4e3 }, "-=100").add({ targets: "#vid, .sct-2-1", translateY: ["100vh", "0vh"], duration: 4e3 }, "-=4000").add({ targets: "#vid", opacity: 0 }, "+=4666").add({ targets: "#arrow-ctrl", translateY: "120%", duration: 100 }).add({ targets: ".sct-2-2", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "-=2000").add({ targets: ".sct-2-1", translateY: [{ value: "-102%", duration: 1800 }], opacity: [{ value: 0, duration: 800, delay: 1400 }] }, "-=2000").add({ targets: "#elements .lens", opacity: [{ value: [0, 1], duration: 600 }], scale: [{ value: [.7, 1], duration: 1400, delay: 200 }] }).add({ targets: "#arrowpath-ctrl", translateY: ["120%", "90%"], duration: 100 }).add({ targets: "#elements .arrow-path", opacity: [0, 1], duration: 600 }).add({ targets: "#elements .circle, #elements .square, #elements .polygon", opacity: [{ value: [0, 1], duration: 400 }], scale: [{ value: [.4, 1], duration: 800, delay: 200, easing: "easeOutCubic" }], delay: anime.stagger(400) }).add({ targets: ".sct-2-3", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "+=4666").add({ targets: ".sct-2-2", translateY: [{ value: "-102%", duration: 1800 }], opacity: [{ value: 0, duration: 800, delay: 1400 }] }, "-=2000").add({ targets: "#elements .reddy path:nth-child(1)", fill: "#ee0b0b" }).add({ targets: "#arrowpath-ctrl", translateY: "120%", duration: 100 }, "+=4666").add({ targets: "#elements", translateY: "-100vh", duration: 4e3 }).add({ targets: "#menhome", translateY: ["100vh", "0vh"], duration: 4e3 }, "-=4000").add({ targets: ".sct-3-1", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "-=4000").add({ targets: ".sct-2-3", translateY: [{ value: "-102%", duration: 1800 }], opacity: [{ value: 0, duration: 800, delay: 1400 }] }, "-=4000").add({ targets: "#men-ctrl", translateY: ["120%", "90%"], duration: 100 }).add({ targets: ".sct-3-2", opacity: [{ value: [0, 1], duration: 800 }], translateY: [{ value: ["102%", "0%"], duration: 1800, delay: 200 }] }, "+=4666").add({ targets: ".sct-3-1", translateY: [{ value: "-102%", duration: 1800 }], opacity: [{ value: 0, duration: 800, delay: 1400 }] }, "-=2000").add({ targets: "#menhome .reddy", fill: "#ee0b0b" }).add({ targets: "#men-ctrl", translateY: "120%", duration: 100 }, "+=4666").add({ targets: ".sct-3-2, #menhome", translateY: "-50vh", duration: 4e3 }).add({ targets: "body >footer", translateY: ["100%", "0%"], duration: 4e3 }, "-=4000"); const scrollPercent = () => { var t = document.body.scrollTop; return (document.documentElement.scrollTop + t) / (document.documentElement.scrollHeight - document.documentElement.clientHeight) * 100 }; if (window.onscroll = () => { tlc.seek(scrollPercent() / 100 * tlc.duration) }, "IntersectionObserver" in window) { const x = {}, y = document.querySelectorAll(".ctrl"); function handleIntersection(t) { t.map(t => { t.isIntersecting ? ("arrow-ctrl" == t.target.id && ppvideo(1, "vid"), "men-ctrl" == t.target.id && ppvideo(1, "men"), "arrowpath-ctrl" == t.target.id && ppvideo(1, "aniarrowpath")) : ("arrow-ctrl" == t.target.id && ppvideo(0, "vid"), "men-ctrl" == t.target.id && ppvideo(0, "men"), "arrowpath-ctrl" == t.target.id && ppvideo(0, "aniarrowpath")) }) } const z = new IntersectionObserver(handleIntersection, x); y.forEach(t => { z.observe(t) }); const A = {}; var h = document.querySelectorAll(".h .hfull"); function handleIntersectionH(t) { t.map(t => { t.isIntersecting ? document.querySelector(".h").classList.remove("shorty") : document.querySelector(".h").classList.add("shorty") }) } var observerH = new IntersectionObserver(handleIntersectionH, A); h.forEach(t => { observerH.observe(t) }) } else alert("Use a newer browser in order to have a right experience on our website."); function ppvideo(e = 1, t = "vid") { let a = document.getElementById(t); a && "vid" == t ? a.playbackRate = e : "aniarrowpath" != t ? "men" == t && arr_ani_men.forEach(t => { 1 == e && t.play(), 0 == e && t.pause() }) : arr_ani.forEach(t => { 1 == e && t.play(), 0 == e && t.pause() }) }